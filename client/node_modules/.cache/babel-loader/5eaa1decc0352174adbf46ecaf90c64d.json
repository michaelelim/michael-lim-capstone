{"ast":null,"code":"var _jsxFileName = \"/Users/my-cole-im/Desktop/WebDev/michael-lim-capstone/src/components/Title/Title.jsx\";\nimport React, { useState } from 'react';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { Link } from 'react-router-dom';\nimport '../../App.scss';\nimport './Title.scss'; // export default function Title() {  \n//   // const [value, setValue] = useState('');\n//   // const { speak } = useSpeechSynthesis();\n//   // const [voiceIndex, setVoiceIndex] = useState(null);\n//   // const onEnd = () => {\n//   //   // You could do something here after speaking has finished\n//   // };\n//   // const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n//   //   onEnd,\n//   // });\n//   // const voice = voices[voiceIndex] || null;\n//   return (\n//     <div className=\"App\">\n//       <h1 className=\"title\">You Don't Know Diddly Squat</h1>\n//       <h3 className=\"title__sub\">A multiplayer quiz show for the whole family!</h3>\n//       <Link to=\"/join\"><button className=\"button\">Let's Go!</button></Link>\n//       {/* <textarea\n//         value={value}\n//         onChange={(event) => setValue(event.target.value)}\n//       />\n//       <button onClick={() => speak({ text: value })}>Speak</button> */}\n//     </div>\n//   )\n// }\n\nexport default function Title() {\n  const [text, setText] = useState('I am a robot');\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [voiceIndex, setVoiceIndex] = useState(null);\n\n  const onEnd = () => {// You could do something here after speaking has finished\n  };\n\n  const {\n    speak,\n    cancel,\n    speaking,\n    supported,\n    voices\n  } = useSpeechSynthesis({\n    onEnd\n  });\n  const voice = voices[voiceIndex] || null;\n  const styleFlexRow = {\n    display: 'flex',\n    flexDirection: 'row'\n  };\n  const styleContainerRatePitch = {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 12\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"voice\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \"Voice\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"voice\",\n    name: \"voice\",\n    value: voiceIndex || '',\n    onChange: event => {\n      setVoiceIndex(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Default\"), voices.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n    key: option.voiceURI,\n    value: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, `${option.lang} - ${option.name}`))), /*#__PURE__*/React.createElement(\"div\", {\n    style: styleContainerRatePitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styleFlexRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"rate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, \"Rate: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rate-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, rate)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0.5\",\n    max: \"2\",\n    defaultValue: \"1\",\n    step: \"0.1\",\n    id: \"rate\",\n    onChange: event => {\n      setRate(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    style: styleContainerRatePitch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: styleFlexRow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"pitch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Pitch: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pitch-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, pitch)), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    min: \"0\",\n    max: \"2\",\n    defaultValue: \"1\",\n    step: \"0.1\",\n    id: \"pitch\",\n    onChange: event => {\n      setPitch(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Message\"), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"message\",\n    name: \"message\",\n    rows: 3,\n    value: text,\n    onChange: event => {\n      setText(event.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }), speaking ? /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: cancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, \"Stop\") : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => speak({\n      text,\n      voice,\n      rate,\n      pitch\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }, \"Speak\"), \")}\");\n}\n;","map":{"version":3,"sources":["/Users/my-cole-im/Desktop/WebDev/michael-lim-capstone/src/components/Title/Title.jsx"],"names":["React","useState","useSpeechSynthesis","Link","Title","text","setText","pitch","setPitch","rate","setRate","voiceIndex","setVoiceIndex","onEnd","speak","cancel","speaking","supported","voices","voice","styleFlexRow","display","flexDirection","styleContainerRatePitch","marginBottom","event","target","value","map","option","index","voiceURI","lang","name"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useSpeechSynthesis } from 'react-speech-kit';\nimport { Link } from 'react-router-dom';\nimport '../../App.scss';\nimport './Title.scss';\n\n// export default function Title() {  \n//   // const [value, setValue] = useState('');\n//   // const { speak } = useSpeechSynthesis();\n//   // const [voiceIndex, setVoiceIndex] = useState(null);\n//   // const onEnd = () => {\n//   //   // You could do something here after speaking has finished\n//   // };\n//   // const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n//   //   onEnd,\n//   // });\n//   // const voice = voices[voiceIndex] || null;\n\n//   return (\n//     <div className=\"App\">\n//       <h1 className=\"title\">You Don't Know Diddly Squat</h1>\n//       <h3 className=\"title__sub\">A multiplayer quiz show for the whole family!</h3>\n//       <Link to=\"/join\"><button className=\"button\">Let's Go!</button></Link>\n\n//       {/* <textarea\n//         value={value}\n//         onChange={(event) => setValue(event.target.value)}\n//       />\n//       <button onClick={() => speak({ text: value })}>Speak</button> */}\n//     </div>\n//   )\n// }\n\nexport default function Title() {\n  const [text, setText] = useState('I am a robot');\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [voiceIndex, setVoiceIndex] = useState(null);\n  const onEnd = () => {\n    // You could do something here after speaking has finished\n  };\n  const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n    onEnd,\n  });\n\n  const voice = voices[voiceIndex] || null;\n\n  const styleFlexRow = { display: 'flex', flexDirection: 'row' };\n  const styleContainerRatePitch = {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 12,\n  };\n\n  return (\n      <form>\n            <label htmlFor=\"voice\">Voice</label>\n            <select\n              id=\"voice\"\n              name=\"voice\"\n              value={voiceIndex || ''}\n              onChange={(event) => {\n                setVoiceIndex(event.target.value);\n              }}\n            >\n              <option value=\"\">Default</option>\n              {voices.map((option, index) => (\n                <option key={option.voiceURI} value={index}>\n                  {`${option.lang} - ${option.name}`}\n                </option>\n              ))}\n            </select>\n            <div style={styleContainerRatePitch}>\n              <div style={styleFlexRow}>\n                <label htmlFor=\"rate\">Rate: </label>\n                <div className=\"rate-value\">{rate}</div>\n              </div>\n              <input\n                type=\"range\"\n                min=\"0.5\"\n                max=\"2\"\n                defaultValue=\"1\"\n                step=\"0.1\"\n                id=\"rate\"\n                onChange={(event) => {\n                  setRate(event.target.value);\n                }}\n              />\n            </div>\n            <div style={styleContainerRatePitch}>\n              <div style={styleFlexRow}>\n                <label htmlFor=\"pitch\">Pitch: </label>\n                <div className=\"pitch-value\">{pitch}</div>\n              </div>\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"2\"\n                defaultValue=\"1\"\n                step=\"0.1\"\n                id=\"pitch\"\n                onChange={(event) => {\n                  setPitch(event.target.value);\n                }}\n              />\n            </div>\n            <label htmlFor=\"message\">Message</label>\n            <textarea\n              id=\"message\"\n              name=\"message\"\n              rows={3}\n              value={text}\n              onChange={(event) => {\n                setText(event.target.value);\n              }}\n            />\n            {speaking ? (\n              <button type=\"button\" onClick={cancel}>\n                Stop\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                onClick={() => speak({ text, voice, rate, pitch })}\n              >\n                Speak\n              </button>\n            )}\n        )}\n      </form>\n  );\n};"]},"metadata":{},"sourceType":"module"}