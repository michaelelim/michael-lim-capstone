function find(str, re, replace) {
  var results = [];
  str.replace(re, (txt, ...args) => {
    var groups = args.slice(0, -1),
      index = groups.pop();
    results.push({
      text: txt,
      groups: groups,
      index: index
    });
  });
  return results;
}

find.replace = replace;
find.test = find.testString = testString;

function replace(str, re, toReplace) {
  if (_.isString(re)) {
    re = new RegExp(
      re.replace(/\\/mgi, '\\\\'),
      'mgi'
    );
  }
  return str.replace(re, toReplace);
}

function testString(str, ...items) {
  return !!_.flatten(items)
    .filter(re => {
      return _.isString(re)
        ? str === re
        : str.search(re) > -1;
    })
    .length;
},
