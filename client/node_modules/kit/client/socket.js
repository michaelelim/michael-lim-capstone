import EventEmitter from './events/event-emitter';

class Socket extends EventEmitter {

  constructor (url) { super();
    var self = this;
    self.url = url;
    self.ws = null;
    self.waiting = [];
    self.connected = true;

    self.init(url);
  }

  init (url) {
    var self = this;
    if (self.ws) {
      return;
    }
    self.ws = new WebSocket(url);
    self.ws.onopen = () => {
      (self.waiting || []).forEach((content) => {
        self.ws.send(content);
      });
    };
    self.ws.onmessage = self.onMessage.bind(self);
  }

  onMessage (ev) {
    var self = this,
      content = ev.data,
      response = JSON.parse(content);
    self.emit(response.name, response.data);
  }

  send (name, data) {
    var self = this,
      request = {
        name: name,
        data: data
      },
      content = JSON.stringify(request);
    if (self.ws.readyState !== self.ws.OPEN) {
      self.waiting.push(content);
      return;
    }
    self.ws.send(content);
  }

}

module.exports = class SocketUtil {

  init () {
    var self = this;
  }

  socket (url) {
    return new Socket(url);
  }

};
