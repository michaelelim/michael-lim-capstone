'use strict';

const _ = require('lodash');
const uglify = require('uglify-js');
const htmlMinifier = require('html-minifier');

const DEFAULT_OPTIONS = {
  caseSensitive: true,
  html5: true,
  ignoreCustomComments: false,
  minifyCSS: true,
  collapseWhitespace: true,
  minifyJS: true,
  preserveLineBreaks: false,
  useShortDoctype: true,
  trimCustomFragments: false,
  removeTagWhitespace: true,
  removeStyleLinkTypeAttributes: true,
  removeScriptTypeAttributes: true,
  removeRedundantAttributes: false,
  removeComments: true,
  collapseBooleanAttributes: true,
  collapseInlineTagWhitespace: true,
  conservativeCollapse: false,
};

class Minifier {

  constructor () {
    var self = this;
  }

  minifyJS (source) {
    var self = this;
    return uglify.minify(source, {
      fromString: true,
    }).code;
  }

  minifyCSS (source) {
    var self = this,
      code = self
        .minifyHTML(`<style>${source}</style>`, {
          minifyCSS: true,
        })
        .slice(7, -8);
    return code;
  }

  minifyHTML (source, opts = {}) {
    var self = this,
      options = _.extend(DEFAULT_OPTIONS, opts);
    source = source.replace(/\<script([^\>]*)\>([\s\S]+?)\<\/script\>/mgi, (txt, attrs, code) => {
      if (attrs.includes('src')) {
        return txt;
      }
      return `<script${attrs}>${self.minifyJS(code)}</script>`;
    });
    return htmlMinifier.minify(source, options);
  }

}

module.exports = new Minifier();
