getProperty(data, name)
  current = data;
  for key in split('.', name)
    current = current[key];
  return current;

setProperty(data, name, value)
  current = data;
  chain = split('.', name);
  target = pop(chain);
  for key in chain
    if !(key in current)
      current[key] = {};
    current = current[key];
  current[target] = value;
  return data;

placeholder()
  &::-webkit-input-placeholder
    { block }
  &::-moz-placeholder
    { block }
  &:-ms-input-placeholder
    { block }
  &:-moz-placeholder
    { block }

fixed($top = null, $right = null, $bottom = null, $left = null)
  position: fixed;
  if $top != null
    top: $top;
  if $right != null
    right: $right;
  if $bottom != null
    bottom: $bottom;
  if $left != null
    left: $left;

// Mixins ========================================================================

replace($str, $sub, $target)
  return join($target, split($sub, $str))

$symbols = {
  'A': 'a',
  'B': 'b',
  'C': 'c',
  'D': 'd',
  'E': 'e',
  'F': 'f',
  'G': 'g',
  'H': 'h',
  'I': 'i',
  'J': 'g',
  'K': 'k',
  'L': 'l',
  'M': 'm',
  'N': 'n',
  'O': 'o',
  'P': 'p',
  'Q': 'q',
  'R': 'r',
  'S': 's',
  'T': 't',
  'U': 'u',
  'V': 'v',
  'W': 'w',
  '\X': 'x',
  'Y': 'y',
  'Z': 'z'
};

$letters = values($symbols);

lower-case($str)
  for $upper, $lower in $symbols
    $str = replace($str, $upper, $lower);
  return $str;

upper-case($str)
  for $upper, $lower in $symbols
    $str = replace($str, $lower, $upper);
  return $str;

only-letters($str, $allowed = ())
  $result = '';
  $word = split('', lower-case($str));
  for $s in $word
    if $s in $letters or $s in $allowed
      $result = $result + $s;
  return $result;

dasherize($str)
  return replace(
    lower-case(
      only-letters(
        $str, (' ')
      )
    ),
    ' ',
    '-'
  )

capitalize(str)
  count = length(split('', str));
  return upper-case(substr(str, 0, 1)) + substr(str, 1, count - 1);
