'use strict';

const _ = {
  each: require('./each'),
};

class EventEmitter {

  constructor () {
    var self = this;
    self._handlers = {};
  }

  on (name, handler, oneTime) {
    var self = this,
      handlers = self._handlers;
    handlers[name] = handlers[name] || [];
    handlers[name].push({
      oneTime: !!oneTime,
      handler: handler
    });
    return self;
  }

  one (name, handler) {
    var self = this;
    return self.on(name, handler, true);
  }

  once (...args) {
    var self = this;
    return self.one(...args);
  }

  emit (name) {
    var self = this,
      args = Array.prototype.slice.call(arguments, 1),
      handlers = self._handlers;
    _.each(handlers[name], (ev, i) => {
      ev.handler.apply(self, args);
      if (ev.oneTime) {
        handlers[name].splice(i, 1);
      }
    });
    return self;
  }

}

module.exports = EventEmitter;
