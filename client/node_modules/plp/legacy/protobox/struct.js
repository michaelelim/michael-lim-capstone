import apply from './apply';

class CortElement extends HTMLElement {

  getParents () {
    var self = this,
      parents = [],
      parent = self.parentNode;
    while (parent && parent !== document) {
      parents.push(parent);
      parent = parent.parentNode;
    }
    return parents.filter(function (parent) {
      return parent instanceof Element;
    });
  }

  keep (obj, name) {
    var self = this;
    obj[name] = self;
    return self;
  }

  back (selector) {
    var self = this;
    if (selector) {
      return self.findParent(selector);
    }
    return self.parentNode;
  }

  findParent (selector) {
    var self = this,
      parents = self.getParents(),
      parent = null;
    parents.forEach(p => {
      if (parent || !p.matches(selector)) {
        return;
      }
      parent = p;
    });
    return parent;
  }
}

apply(CortElement);

export default CortElement;
