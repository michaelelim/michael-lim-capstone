'use strict';

const _ = {

  extend: require('../extend'),
  doc: require('../doc'),
  each: require('../each'),
  css: require('../css'),
  dasherize: require('../dasherize'),
  appendElement: require('../append-element'),
  prependElement: require('../prepend-element'),
  fillElement: require('../fill-element'),
  afterElement: require('../after-element'),
  beforeElement: require('../before-element'),
  ifFullMany: require('../if-not-empty-many'),

  checkArgs: require('./check-args'),
  optionsFromArgs: require('./options-from-args'),
  dom: require('../dom'),

};

const state = {

};

_.extend(createElement, {
  checkArgs: require('./check-args'),
  optionsFromArgs: _.optionsFromArgs,
  dom: _.dom,
});

function createElement (...args) {
  var check = _.checkArgs(args);

  if (check !== undefined) return check;

  let o = _.optionsFromArgs(args),
    tagName = args.length === 2 ? args[0] : o.tagName,
    elem = _.doc.createElement(tagName);

  _.each(o.props, (val, name) => {
    elem[name] = val;
  });

  _.ifFullMany(
    o.className, () => elem.className = o.className,
    o.html, () => elem.innerHTML = o.html,
    o.api, () => _.each(o.api, (method, name) => {
      elem[name] = method;
    }),
    o.css, () => _.css(elem, o.css),
    o.attrs, () =>
      _.each(o.attrs, (val, name) =>
        elem.setAttribute(_.dasherize(name), val)),
    o.onRender, () => o.onRender(elem),
    o.parent, () => _.appendElement(o.parent, elem),
    o.prependTo, () => _.prependElement(o.prependTo, elem),
    o.fillTo, () => _.fillElement(o.fillTo, elem),
    o.after, () => _.afterElement(o.after, elem),
    o.before, () => _.beforeElement(o.before, elem),
    o.onAttach, () => o.onAttach(elem),
    o.events, () =>
      _.each(o.events, (cb, name) => {
        elem.addEventListener(name, ev => {
          cb.call(elem, ev);
        }, false);
      })
  );
  o.children.forEach(child => {
    var childElem = createElement(child);
    elem.appendChild(childElem);
  });
  return elem;
}

module.exports = createElement;
