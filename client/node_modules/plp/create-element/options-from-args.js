'use strict';

const _ = {
  extend: require('../extend'),
  parseSelector: require('../parse-selector'),
  buildData: require('../build-data'),

  extractAttrsOpts: require('./extract-attrs-options'),
  extractCssOpts: require('./extract-css-options'),
  extractEventsOpts: require('./extract-events-options'),
};

const OPTIONS = {
  tagName: ['tagName', 'tag', 'name', 't'],
  className: ['className', 'class', 'cl', 'c'],
  attrs: ['attributes', 'attrs', 'attr', 'a', '$'],
  children: ['children', 'childs', 'items', '__'],
  html: ['content', 'inner', 'html', '_'],
  parent: ['appendTo', 'parent', 'append', 'p'],
  prependTo: ['prependTo', 'prepend', 'unshift'],
  fillTo: ['fillTo', 'replaceTo', 'fill', 'replace'],
  after: ['insertAfter', 'after'],
  before: ['insertBefore', 'before'],
  events: ['events', 'bind', 'listeners', 'e'],
  onRender: ['onRender', 'onRendered', 'rendered'],
  onAttach: ['onAttach', 'onAttached', 'attached'],
  api: ['api', 'methods'],
  css: ['styles', 'css', 'style'],
  props: ['props', 'properties', 'extend'],
};

function optionsFromArgs(args = []) {
  var sel = (args[0] && typeof args[0] === 'string') ? _.parseSelector(args.shift()) : {},
    o = args.shift() || {},
    opts = _.buildData(o, OPTIONS, {
      tagName: sel.tagName || 'div',
      className: sel.className || '',
      attrs: {},
      html: '',
      css: {},
      events: {},
      onRender: null,
      onAttach: null,
      children: [],
      html: '',
      parent: null,
      fillTo: null,
      prependTo: null,
      after: null,
      before: null,
      api: {},
      props: {},
    });
  _.extend(opts.attrs, sel.attrs, _.extractAttrsOpts(o));
  _.extend(opts.css, sel.css, _.extractCssOpts(o));
  _.extend(opts.events, sel.events, _.extractEventsOpts(o));
  opts.html = opts.html || sel.content;
  return opts;
}

module.exports = optionsFromArgs;
