'use strict';

const _ = {
  isClass: require('./is-class'),
  extend: require('./extend'),
};

function type (val, skipClasses = false) {
  if (!skipClasses && val instanceof RegExp) return 'reg';
  if (val === null) return 'null';
  if (val === undefined) return 'undefined';
  if (Array.isArray(val)) return 'array';
  if (typeof val === 'number' && isNaN(val)) return 'nan';
  if (_.isClass(val)) return 'class';
  return typeof val;
}

function isLikeArray(val) {
  if (!val || typeof val !== 'object') return false;
  if (Array.isArray(val)) return true;
  let keys = Object.keys(val);
  return Object.getOwnPropertyNames(val).includes('length')
    && !!keys.filter(n => !isNaN(+n)).length;
};

_.extend(type, {
  isLikeArray,
});

module.exports = type;
