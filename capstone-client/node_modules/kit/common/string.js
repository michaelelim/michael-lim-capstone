'use strict';

module.exports = class StringCommon {

  constructor () {
    var self = this;
  }

  find (str, re, replace) {
    var self = this,
      results = [];
    str.replace(re, (txt, ...args) => {
      var groups = args.slice(0, -1),
        index = groups.pop();
      results.push({
        text: txt,
        groups: groups,
        index: index
      });
    });
    return results;
  }

  replace (str, re, toReplace) {
    var self = this;
    if (_.isString(re)) {
      re = new RegExp(
        re.replace(/\\/mgi, '\\\\'),
        'mgi'
      );
    }
    return str.replace(re, toReplace);
  }

  testString (str, ...items) {
    var self = this;
    return !!_.flatten(items)
      .filter(re => {
        return _.isString(re)
          ? str === re
          : str.search(re) > -1;
      })
      .length;
  }

}
