'use strict';

var _ = require('../kit');
var Hash = require('./hash');

module.exports = class List extends Hash {

  init (items) {
    var self = this;
    self.items = items || [];
  }

  at (index) {
    var self = this;
    return self.items[index];
  }

  each (handler) {
    var self = this;
    _.each(self.items, (item, index) => {
      handler(item, index);
    });
    return self;
  }

  last () {
    var self = this;
    return self.items[self.items.length - 1];
  }

  insert (item, position) {
    var self = this;
    if (typeof position !== 'number' || isNaN(position)) {
      position = self.items.length;
    }
    self.items.splice(position, 0, item);
    self.emit('insert', item, position);
    return self;
  }

  remove (item) {
    var self = this,
      index = self.indexOf(item);
    if (index === -1) {
      return null;
    }
    return self.removeAt(index);
  }

  removeAt (index) {
    var self = this,
      item = self.items[index];
    self.items.splice(index, 1);
    self.emit('remove', item, index);
    if (typeof item.emit === 'function') {
      item.emit('remove');
    }
    return item;
  }

  indexOf (item) {
    var self = this;
    return self.items.indexOf(item);
  }

  move (item, position) {
    var self = this,
      index = self.indexOf(item),
      item;
    if (index === -1) {
      return null;
    }
    item = self.items.splice(index, 1)[0];
    self.items.splice(position, 0, item);
    self.emit('move', item, position);
    return self;
  }

  replace (items) {
    var self = this;
    self.items = items;
    self.emit('replace', items);
    return self;
  }

}
