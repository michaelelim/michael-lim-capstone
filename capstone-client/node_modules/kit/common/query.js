'use strict';

const ObjectUtil = require('./object');

var objectUtil = new ObjectUtil();

function query(arg) {
  return typeof arg === 'string'
    ? parse(arg)
    : stringify(arg);
}

function parse(s) {
  var str = s.split('?').pop(),
    pairs = str.split('&').map(s => s.split('=')),
    data = {};
  pairs.forEach(pair => {
    var n = pair[0],
      name = n.endsWith('[]') ? n.slice(0, -2) : n,
      val = pair[1];
    if (data[name] && !Array.isArray(data[name])) {
      data[name] = [data[name]];
    }
    if (Array.isArray(data[name]) && n.endsWith('[]')) {
      return data[name].push(decodeURIComponent(val));
    }
    data[name] = decodeURIComponent(val);
  });
  return objectUtil.unflatten(data);
}

function stringify(d) {
  var data = objectUtil.flatten(d, undefined, true);
  return Object
    .keys(data)
    .map(key => {
      var val = data[key];
      if (Array.isArray(val)) {
        return val
          .map(v => `${key}[]=${encodeURIComponent(v)}`)
          .join('&');
      }
      return `${key}=${encodeURIComponent(val)}`;
    })
    .join('&');
}

query.parse = parse;
query.stringify = stringify;

module.exports = query;
