'use strict';

const _ = require('lodash');
const path = require('path');
const fs = require('fs');

const EXTS = require('./exts').exts;

module.exports = {

  EXTS,

  fs: require('./fs'),

  getPathChain (filename, reversed = false) {
    var self = this,
      chain = [],
      p = filename;
    while (p !== '/') {
      chain.unshift(p);
      p = path.dirname(p);
    }
    return reversed ? chain.reverse().concat(['/']) : ['/'].concat(chain);
  },

  isFilePath (filename) {
    var self = this,
      ext = path.extname(filename).slice(1),
      extItem = null;
    if (!ext) {
      return false;
    }
    EXTS.forEach(item => {
      if (item.name !== ext) return;
      extItem = item;
    });
    return !!extItem;
  },

  ensurePath (f, force = false) {
    var self = this,
      filename = path.resolve(process.cwd(), f),
      paths = self.getPathChain(filename);
    paths
      .filter(dir => !fs.existsSync(dir))
      .filter(dir => !self.isFilePath(dir) || force)
      .forEach(dir => {
        try {
          fs.mkdirSync(dir);
        } catch(err) {}
      });
    return self;
  },

  resolvePath (startDirname) {

  },

};
