'use strict';

const _ = require('lodash');
const LoadSave = require('./load-save');
const util = require('../util');

module.exports = class Structure extends LoadSave {

  wrap (data, filename) {
    const Data = require('./data');
    var self = this,
      item = new Data(data, {
        filename: filename || self._opts.filename,
        parentFilename: self._opts.filename,
        parent: self,
      });
    return item;
  }

  child (key, filename) {
    var self = this,
      item = self.wrap(self.getData(key));
    item._opts.key = key;
    return item;
  }

  getContext (key) {
    var self = this;
    if (!key) return self;
    return key.includes('.')
      ? self._get(self.getParentKey(key))
      : self;
  }

  getParent (key) {
    var self = this;
    if (!key) {
      return self._opts.parent || self;
    }
    return self.get(key)._opts.parent;
  }

}
