'use strict';

class EventEmitter {

  constructor () {
    var self = this;
    self._handlers = {};
  }

  on (name, handler, once) {
    var self = this,
      handlers = self._handlers;
    handlers[name] = handlers[name] || [];
    handlers[name].push({
      once: !!once,
      handler: handler
    });
    return self;
  }

  one (name, handler) {
    var self = this;
    return self.on(name, handler, true);
  }

  emit (name, ...args) {
    var self = this,
      handlers = self._handlers;
    (handlers[name] || []).forEach((ev, i) => {
      ev.handler.apply(self, args);
      ev.once ? handlers[name].splice(i, 1) : '';
    });
    return self;
  }

}

module.exports = EventEmitter;
