'use strict';

const _ = {
  EventEmitter: require('../event-emitter'),
};

class WorkerHost extends _.EventEmitter {

  constructor (worker) { super();
    var self = this;
    self.worker = worker;
    self.setEvents();
  }

  // Public ==================================================================

  send (...args) {
    var self = this;
    self.worker.postMessage(...args);
    return self;
  }

  call (name, ...args) {
    var self = this;
    return new Promise((resolve, reject) => {

    });
  }

  close () {
    var self = this;
    self.worker.terminate();
    return self;
  }

  // Private =================================================================

  setEvents () {
    var self = this,
      worker = self.worker;
    worker.addEventListener('message', ev => {
      self.emit('message', ev.data);
    }, false);
    worker.addEventListener('error', ev => {
      self.emit('error', ev);
    }, false);
  }

  getBaseUrl () {
    var self = this;
    return `${location.protocol}//${location.host}`;
  }

}

module.exports = WorkerHost;
