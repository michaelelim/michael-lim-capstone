import req from 'plp/req';

const _ = req.all({
  elementUid: require('./element-uid'),
  elementPath: require('./element-path'),
  extend: require('./extend'),
  json: require('./json'),
  get: require('./get'),
  set: require('./set'),
  clone: require('./clone'),
  parentNodes: require('./parent-nodes'),
});

const state = {
  data: {},
  localName: 'plp-element-storage-data',
};

function elementStorage(elem, usePath = false) {
  var uid = usePath ? _.elementPath(elem) : _.elementUid(elem);
  if (state.data.hasOwnProperty(uid)) {
    return state.data[uid];
  }
  let data = state.data[uid] = {};
  return data;
}

function saveLocal() {
  var content = _.json({
    data: state.data,
  });
  localStorage.setItem(state.localName, content);
}

function loadLocal() {
  var content = localStorage.getItem(state.localName);
  if (!content) return;
  state.data = _.json(content).data;
}

function getData() {
  return _.clone(state.data);
}

function value(elem, name, defaultValue) {
  var data = elementStorage(elem),
    val = _.get(data, name) || defaultValue;
  _.set(data, name, val);
  return val;
}

_.extend(elementStorage, {
  saveLocal,
  loadLocal,
  getData,
  value,
  val: value,
});

export default elementStorage;
