'use strict';

const _ = {
  appendScript: require('./append-script'),
};

const state = {
  jsonp: {},
  counter: 0,
  scripts: {},
};

function jsonp (...args) {
  return jsonpThen(...args);
}

function jsonpThen (f, methodName, ...args) {
  return new Promise((resolve, reject) => {
    var file = f.endsWith('.js') ? f : `${f}.js`,
      key = `jsonp-${++state.counter}`,
      opts = {
        uid: key,
        args: args,
        name: methodName,
      },
      query = `opts=${encodeURIComponent(JSON.stringify(opts))}`,
      url = `http://pale.pro/jsonp/${file || 'index.js'}?${query}`;
    state.jsonp[key] = {
      resolve, reject,
    };
    _
      .appendScript(url)
      .then(() => {});
  });
}

function jsonpResolve (key, ...args) {
  var router = state.jsonp[key] || {};
  if (!router || !router.resolve) return;
  router.resolve(...args);
  state.jsonp[key] = null;
}

function jsonpReject (key, ...args) {
  var router = state.jsonp[key] || {};
  if (!router || !router.reject) return;
  router.reject(...args);
  state.jsonp[key] = null;
}

jsonp.then = jsonpThen;
jsonp.resolve = jsonpResolve;
jsonp.reject = jsonpReject;

module.exports = jsonp;
