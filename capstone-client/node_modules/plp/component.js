'use strict';

const _ = {
  load: require('./load'),
};

const state = {

};

class Component extends HTMLElement {

  // Shims =====================================================================

  $created () {
    var self = this;
  }

  $ready () {
    var self = this;
  }

  $attached () {
    var self = this;
  }

  $detached () {
    var self = this;
  }

  $attributeChanged () {
    var self = this;
  }

  // Callbacks =================================================================

  createdCallback () {
    var self = this;
    self.$created();
  }

  attachedCallback () {
    var self = this;
    self.$attached();
    self.$ready();
  }

  detachedCallback () {
    var self = this;
    self.$detached();
  }

  attributeChangedCallback (attributeName, oldValue, newValue, namespace) {
    var self = this;
    self.$attributeChanged(attributeName, oldValue, newValue, namespace);
  }

  // Statics ===================================================================

  static element(tagName) {
    var Class = this;
    // customElements.define(tagName, Class);
    _.load(Class.imports || []).then(() => {
      document.registerElement(tagName, {
        prototype: Class.prototype,
      });
    });
  }

  static extension(name, extend) {
    var Class = this;
    // customElements.define(name, Class, {
    //   extends: extend,
    // });
    _.load(Class.imports || []).then(() => {
      try {
        document.registerElement(name, {
          extends: extend,
          prototype: Class.prototype,
        });
      } catch(err) {
        console.log(err.message);
      }
    });
  }

}

module.exports = Component;
