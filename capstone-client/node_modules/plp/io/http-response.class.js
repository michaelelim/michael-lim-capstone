'use strict';

const _ = {
  EventEmitter: require('../event-emitter'),
  path: require('../path'),
  
  files: require('./files'),
};

const state = {

};

class HttpResponse extends _.EventEmitter {
  
  constructor (req, ev) { super();
    var self = this;
    self.req = req;
    self.ev = ev;
    self._file = null;
  }
    
  getFile () {
    const files = require('./files');
    var self = this;
    if (self._file) return self._file;
    if (self.type === 'blob') {
      return self._file = files.fromBlob(self.data, _.path.basename(self.url));
    }
  }
  
  isSuccess () {
    var self = this;
    return self.req.readyState === 4 && self.req.status === 200;
  }
  
  get file () {
    var self = this;
    return self.getFile();
  }
  
  get data () {
    var self = this;
    return self.req.response;
  }
  
  get url () {
    var self = this;
    return self.req.responseURL;
  }
  
  get type () {
    var self = this;
    return self.req.responseType;
  }
  
  get success () {
    var self = this;
    return self.isSuccess();
  }
  
  get loaded () {
    var self = this;
    return self.ev.loaded;
  }
  
  get total () {
    var self = this;
    return self.ev.total;
  }
  
}

module.exports = HttpResponse;
