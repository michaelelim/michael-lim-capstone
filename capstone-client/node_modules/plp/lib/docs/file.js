'use strict';

const _ = require('../_');
const fs = require('fs');
const path = require('path');

const Entry = require('./entry');

const state = {
  // re: /\/\*\*([\s\S]+?)\*\//mgi,
  re: /\/\*\*(\s*([a-zA-Z0-9\$\_]+)\s+([\s\S]+?)$\s+([\s\S]+?)\s*)\*\//mgi,
};

class File extends _.EventEmitter {

  constructor (filename, project) { super();
    var self = this;
    self.project = project;
    self.filename = filename;
    self.entries = self.getEntries();
  }

  getEntries () {
    var self = this,
      source = self.source,
      entries = [],
      res = state.re.exec(source);
    while (res) {
      entries.push(new Entry({
        type: res[2],
        name: res[3],
        content: res[4],
        index: res.index,
      }, self));
      res = state.re.exec(source);
    }
    return entries;
  }

  get source () {
    var self = this;
    return self.getSource();
  }

  getSource () {
    var self = this,
      filename = self.project.resolve(self.filename),
      source = fs.readFileSync(filename, 'utf-8');
    return source;
  }

}

module.exports = File;
