class FileSlice {

  constructor (blob, begin, end) {
    var self = this;
    self.blob = blob;
    self.begin = begin;
    self.end = end;
  }

  get size () {
    var self = this;
    return self.blob.size;
  }

  readAs (type) {
    var self = this,
      blob = self.blob;

    type = type[0].toUpperCase() + type.slice(1);

    return new Promise((resolve, reject) => {
      var reader = new FileReader();
      reader.onload = function (ev) {
        resolve(ev.target.result);
      };
      reader[`readAs${type}`](blob);
    });
  }

  dataUrl () {
    var self = this;
    return self.readAs('dataURL');
  }

  buffer () {
    var self = this;
    return self.readAs('arrayBuffer');
  }

  binaryString () {
    var self = this;
    return self.readAs('binaryString');
  }

  text () {
    var self = this;
    return self.readAs('text');
  }

}

module.exports = FileSlice;
