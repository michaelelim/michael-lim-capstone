import apply from './apply';

class CortElement extends HTMLElement {
  toBody () {
    var self = this;
    return self.appendTo(document.body);
  }

  beforeTo (sibling) {
    var self = this;
    sibling.before(self);
    return self;
  }

  afterTo (sibling) {
    var self = this;
    sibling.after(self);
    return self;
  }

  before (child) {
    var self = this,
      parent = self.parentNode;
    if (!parent || !child) {
      return self;
    }
    parent.insertBefore(child, self);
    return self;
  }

  after (child) {
    var self = this,
      parent = self.parentNode,
      next = self.nextSibling;
    if (!parent || !child) {
      return self;
    }
    if (!next) {
      parent.appendChild(child);
      return self;
    }
    parent.insertBefore(child, next);
    return self;
  }

  appendTo (parent) {
    var self = this;
    parent.appendChild(self);
    return self;
  }

  append (child) {
    var self = this;
    self.appendChild(child);
    return self;
  }
}

apply(CortElement);

export default CortElement;
